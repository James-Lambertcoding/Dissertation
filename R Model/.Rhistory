salary = test_function_cal[[10]],
capital = test_function_cal[[11]],
interest_rate = Interest_rate)
## 2.2 test_F ----------------------
test_F <- function_delta_F_f(gamma_capital =  test_function_cal[[4]][,1],
gamma_labour = test_function_cal[[4]][,2],
price = test_function_cal[[7]],
output = test_function_cal[[8]],
capital_price = test_function_cal[[12]][,1],
labour_price = test_function_cal[[10]],
capital =  test_function_cal[[11]],
labour = test_function_cal[[9]])
## 2.2 test_pi ----------------------
test_pi <- function_delta_pi_j(price = test_function_cal[[7]],
A_j = test_function_cal[[5]],
beta = test_function_cal[[3]],
primary_costs = test_function_cal[[12]],
gamma_capital =  test_function_cal[[4]][,1],
gamma_labour = test_function_cal[[4]][,2])
## 2.4 test_m ----------------------
test_m <- function_delta_m(salary = test_function_cal[[10]],
labour = test_function_cal[[9]],
capital = test_function_cal[[11]],
interest_rate = Interest_rate,
m_tot = test_function_cal[[13]]
)
# results_list <- list()
#
# results_list[[1]] <- test_c
# results_list[[2]] <- test_F
# results_list[[3]] <- test_pi
# results_list[[4]] <- test_m
max_pi <- max(test_pi)
min_pi <- min(test_pi)
max_price <-max(test_function_cal[[7]])
min_price <- min(test_function_cal[[7]])
new_prices <- rep(1, length(sectors))
for(i in 1:length(sectors)){
if(test_pi[i] > 0){
new_prices[i] <- test_function_cal[[7]][i]/(alter_factor*(test_pi[i]/max_pi))
} else{
new_prices[i] <- (test_function_cal[[7]][i]*alter_factor*test_pi[i]/min_pi)
}
}
return(new_prices)
}
test_delta_function <- function_test_delta(test_function_cal = test_function_cal)
test_delta_function
test_pi
function_test_delta <- function(test_function_cal){
## 2.1 test_C ----------------------
test_c <- function_delta_c_i(alpha = test_function_cal[[1]],
beta = test_function_cal[[3]],
price = test_function_cal[[7]],
output = test_function_cal[[8]],
labour = test_function_cal[[9]],
salary = test_function_cal[[10]],
capital = test_function_cal[[11]],
interest_rate = Interest_rate)
## 2.2 test_F ----------------------
test_F <- function_delta_F_f(gamma_capital =  test_function_cal[[4]][,1],
gamma_labour = test_function_cal[[4]][,2],
price = test_function_cal[[7]],
output = test_function_cal[[8]],
capital_price = test_function_cal[[12]][,1],
labour_price = test_function_cal[[10]],
capital =  test_function_cal[[11]],
labour = test_function_cal[[9]])
## 2.2 test_pi ----------------------
test_pi <- function_delta_pi_j(price = test_function_cal[[7]],
A_j = test_function_cal[[5]],
beta = test_function_cal[[3]],
primary_costs = test_function_cal[[12]],
gamma_capital =  test_function_cal[[4]][,1],
gamma_labour = test_function_cal[[4]][,2])
## 2.4 test_m ----------------------
test_m <- function_delta_m(salary = test_function_cal[[10]],
labour = test_function_cal[[9]],
capital = test_function_cal[[11]],
interest_rate = Interest_rate,
m_tot = test_function_cal[[13]]
)
# results_list <- list()
#
# results_list[[1]] <- test_c
# results_list[[2]] <- test_F
# results_list[[3]] <- test_pi
# results_list[[4]] <- test_m
max_pi <- max(test_pi)
min_pi <- min(test_pi)
print(max_pi)
max_price <-max(test_function_cal[[7]])
min_price <- min(test_function_cal[[7]])
new_prices <- rep(1, length(sectors))
for(i in 1:length(sectors)){
if(test_pi[i] > 0){
new_prices[i] <- test_function_cal[[7]][i]/(alter_factor*(test_pi[i]/max_pi))
} else{
new_prices[i] <- (test_function_cal[[7]][i]*alter_factor*test_pi[i]/min_pi)
}
}
return(new_prices)
}
test_delta_function <- function_test_delta(test_function_cal = test_function_cal)
test_pi
function_test_delta <- function(test_function_cal){
## 2.1 test_C ----------------------
test_c <- function_delta_c_i(alpha = test_function_cal[[1]],
beta = test_function_cal[[3]],
price = test_function_cal[[7]],
output = test_function_cal[[8]],
labour = test_function_cal[[9]],
salary = test_function_cal[[10]],
capital = test_function_cal[[11]],
interest_rate = Interest_rate)
## 2.2 test_F ----------------------
test_F <- function_delta_F_f(gamma_capital =  test_function_cal[[4]][,1],
gamma_labour = test_function_cal[[4]][,2],
price = test_function_cal[[7]],
output = test_function_cal[[8]],
capital_price = test_function_cal[[12]][,1],
labour_price = test_function_cal[[10]],
capital =  test_function_cal[[11]],
labour = test_function_cal[[9]])
## 2.2 test_pi ----------------------
test_pi <- function_delta_pi_j(price = test_function_cal[[7]],
A_j = test_function_cal[[5]],
beta = test_function_cal[[3]],
primary_costs = test_function_cal[[12]],
gamma_capital =  test_function_cal[[4]][,1],
gamma_labour = test_function_cal[[4]][,2])
## 2.4 test_m ----------------------
test_m <- function_delta_m(salary = test_function_cal[[10]],
labour = test_function_cal[[9]],
capital = test_function_cal[[11]],
interest_rate = Interest_rate,
m_tot = test_function_cal[[13]]
)
# results_list <- list()
#
# results_list[[1]] <- test_c
# results_list[[2]] <- test_F
# results_list[[3]] <- test_pi
# results_list[[4]] <- test_m
max_pi <- max(test_pi)
min_pi <- min(test_pi)
print(max_pi)
print(min_pi)
max_price <-max(test_function_cal[[7]])
min_price <- min(test_function_cal[[7]])
new_prices <- rep(1, length(sectors))
for(i in 1:length(sectors)){
if(test_pi[i] > 0){
new_prices[i] <- test_function_cal[[7]][i]/(alter_factor*(test_pi[i]/max_pi))
} else{
new_prices[i] <- (test_function_cal[[7]][i]*alter_factor*test_pi[i]/min_pi)
}
}
return(new_prices)
}
test_delta_function <- function_test_delta(test_function_cal = test_function_cal)
alter_factor
test_function_cal[[7]]
function_test_delta <- function(test_function_cal){
## 2.1 test_C ----------------------
test_c <- function_delta_c_i(alpha = test_function_cal[[1]],
beta = test_function_cal[[3]],
price = test_function_cal[[7]],
output = test_function_cal[[8]],
labour = test_function_cal[[9]],
salary = test_function_cal[[10]],
capital = test_function_cal[[11]],
interest_rate = Interest_rate)
## 2.2 test_F ----------------------
test_F <- function_delta_F_f(gamma_capital =  test_function_cal[[4]][,1],
gamma_labour = test_function_cal[[4]][,2],
price = test_function_cal[[7]],
output = test_function_cal[[8]],
capital_price = test_function_cal[[12]][,1],
labour_price = test_function_cal[[10]],
capital =  test_function_cal[[11]],
labour = test_function_cal[[9]])
## 2.2 test_pi ----------------------
test_pi <- function_delta_pi_j(price = test_function_cal[[7]],
A_j = test_function_cal[[5]],
beta = test_function_cal[[3]],
primary_costs = test_function_cal[[12]],
gamma_capital =  test_function_cal[[4]][,1],
gamma_labour = test_function_cal[[4]][,2])
## 2.4 test_m ----------------------
test_m <- function_delta_m(salary = test_function_cal[[10]],
labour = test_function_cal[[9]],
capital = test_function_cal[[11]],
interest_rate = Interest_rate,
m_tot = test_function_cal[[13]]
)
# results_list <- list()
#
# results_list[[1]] <- test_c
# results_list[[2]] <- test_F
# results_list[[3]] <- test_pi
# results_list[[4]] <- test_m
max_pi <- max(test_pi)
min_pi <- min(test_pi)
print(max_pi)
print(min_pi)
max_price <-max(test_function_cal[[7]])
min_price <- min(test_function_cal[[7]])
new_prices <- rep(1, length(sectors))
for(i in 1:length(sectors)){
if(test_pi[i] > 0){
new_prices[i] <- test_function_cal[[7]][i]/(alter_factor*(test_pi[i]/max_pi))
print("up")
print(test_pi[i]/max_pi)
} else{
new_prices[i] <- (test_function_cal[[7]][i]*alter_factor*test_pi[i]/min_pi)
print("down")
print(test_pi[i]/min_pi)
}
}
return(new_prices)
}
test_delta_function <- function_test_delta(test_function_cal = test_function_cal)
source("F:/My Drive/EMAP/101 Dissertation/Dissertation/R Model/04_CGE_Functions.R", echo=TRUE)
test_delta_function
source("F:/My Drive/EMAP/101 Dissertation/Dissertation/R Model/04_CGE_Functions.R", echo=TRUE)
source("F:/My Drive/EMAP/101 Dissertation/Dissertation/R Model/04_CGE_Functions.R", echo=TRUE)
test_delta_function
source("F:/My Drive/EMAP/101 Dissertation/Dissertation/R Model/04_CGE_Functions.R", echo=TRUE)
source("F:/My Drive/EMAP/101 Dissertation/Dissertation/R Model/00_Main_Model_v1.R", echo=TRUE)
source("F:/My Drive/EMAP/101 Dissertation/Dissertation/R Model/00_Main_Model_v1.R", echo=TRUE)
runs <- 2
test_function_cal <- function_calibration(price = price_cal_test,
labour = labour_cal_test,
capital = capital_cal_test,
inter_goods = inter_goods_cal_test,
inter_totals = inter_total_cal_test,
salary = salary_cal_test,
interest_rate = interest_rate_cal_test,
demand_ratio = demand_ratios_cal_test,
sectors = sectors)
test_delta_function <- function_test_delta(test_function_cal = test_function_cal)
for(k in 1:runs){
test_function_cal_step <- function_calibration(price = test_delta_function,
labour = labour_cal_test,
capital = capital_cal_test,
inter_goods = inter_goods_cal_test,
inter_totals = inter_total_cal_test,
salary = salary_cal_test,
interest_rate = interest_rate_cal_test,
demand_ratio = demand_ratios_cal_test,
sectors = sectors)
test_delta_function <- function_test_delta(test_function_cal = test_function_cal_step)
}
for(k in 1:runs){
test_function_cal_step <- function_calibration(price = test_delta_function,
labour = labour_cal_test,
capital = capital_cal_test,
inter_goods = inter_goods_cal_test,
inter_totals = inter_total_cal_test,
salary = salary_cal_test,
interest_rate = interest_rate_cal_test,
demand_ratio = demand_ratios_cal_test,
sectors = sectors)
print(k)
test_delta_function <- function_test_delta(test_function_cal = test_function_cal_step)
}
test_delta_function
test_function_cal <- function_calibration(price = price_cal_test,
labour = labour_cal_test,
capital = capital_cal_test,
inter_goods = inter_goods_cal_test,
inter_totals = inter_total_cal_test,
salary = salary_cal_test,
interest_rate = interest_rate_cal_test,
demand_ratio = demand_ratios_cal_test,
sectors = sectors)
test_function_cal
test_delta_function <- function_test_delta(test_function_cal = test_function_cal)
test_delta_function
source("F:/My Drive/EMAP/101 Dissertation/Dissertation/R Model/04_CGE_Functions.R", echo=TRUE)
test_delta_function <- function_test_delta(test_function_cal = test_function_cal)
test_delta_function
price_cal_test
test_function_cal <- function_calibration(price = price_cal_test,
labour = labour_cal_test,
capital = capital_cal_test,
inter_goods = inter_goods_cal_test,
inter_totals = inter_total_cal_test,
salary = salary_cal_test,
interest_rate = interest_rate_cal_test,
demand_ratio = demand_ratios_cal_test,
sectors = sectors)
test_delta_function <- function_test_delta(test_function_cal = test_function_cal)
test_delta_function
price_cal_test
test_function_cal <- function_calibration(price = price_cal_test,
labour = labour_cal_test,
capital = capital_cal_test,
inter_goods = inter_goods_cal_test,
inter_totals = inter_total_cal_test,
salary = salary_cal_test,
interest_rate = interest_rate_cal_test,
demand_ratio = demand_ratios_cal_test,
sectors = sectors)
test_function_cal[[7]]
test_delta_function <- function_test_delta(test_function_cal = test_function_cal)
test_delta_function
source("F:/My Drive/EMAP/101 Dissertation/Dissertation/R Model/04_CGE_Functions.R", echo=TRUE)
test_function_cal <- function_calibration(price = price_cal_test,
labour = labour_cal_test,
capital = capital_cal_test,
inter_goods = inter_goods_cal_test,
inter_totals = inter_total_cal_test,
salary = salary_cal_test,
interest_rate = interest_rate_cal_test,
demand_ratio = demand_ratios_cal_test,
sectors = sectors)
test_function_cal[[7]]
test_delta_function <- function_test_delta(test_function_cal = test_function_cal)
source("F:/My Drive/EMAP/101 Dissertation/Dissertation/R Model/04_CGE_Functions.R", echo=TRUE)
test_function_cal <- function_calibration(price = price_cal_test,
labour = labour_cal_test,
capital = capital_cal_test,
inter_goods = inter_goods_cal_test,
inter_totals = inter_total_cal_test,
salary = salary_cal_test,
interest_rate = interest_rate_cal_test,
demand_ratio = demand_ratios_cal_test,
sectors = sectors)
test_function_cal[[7]]
test_delta_function <- function_test_delta(test_function_cal = test_function_cal)
test_delta_function
source("F:/My Drive/EMAP/101 Dissertation/Dissertation/R Model/04_CGE_Functions.R", echo=TRUE)
test_function_cal <- function_calibration(price = price_cal_test,
labour = labour_cal_test,
capital = capital_cal_test,
inter_goods = inter_goods_cal_test,
inter_totals = inter_total_cal_test,
salary = salary_cal_test,
interest_rate = interest_rate_cal_test,
demand_ratio = demand_ratios_cal_test,
sectors = sectors)
test_function_cal[[7]]
test_delta_function <- function_test_delta(test_function_cal = test_function_cal)
test_delta_function
sectors
test_function_cal <- function_calibration(price = price_cal_test,
labour = labour_cal_test,
capital = capital_cal_test,
inter_goods = inter_goods_cal_test,
inter_totals = inter_total_cal_test,
salary = salary_cal_test,
interest_rate = interest_rate_cal_test,
demand_ratio = demand_ratios_cal_test,
sectors = sectors)
test_function_cal[[7]]
test_function_cal
test_function_cal[[7]]
test_delta_function <- function_test_delta(test_function_cal = test_function_cal)
test_delta_function
test_function_cal
test_function_cal_first <- function_calibration(price = price_cal_test,
labour = labour_cal_test,
capital = capital_cal_test,
inter_goods = inter_goods_cal_test,
inter_totals = inter_total_cal_test,
salary = salary_cal_test,
interest_rate = interest_rate_cal_test,
demand_ratio = demand_ratios_cal_test,
sectors = sectors)
test_delta_function <- function_test_delta(test_function_cal = test_function_cal_first)
test_delta_function
source("F:/My Drive/EMAP/101 Dissertation/Dissertation/R Model/04_CGE_Functions.R", echo=TRUE)
test_delta_function <- function_test_delta(test_function_cal = test_function_cal_first)
test_delta_function
test_pi <- function_delta_pi_j(price = test_function_cal[[7]],
A_j = test_function_cal[[5]],
beta = test_function_cal[[3]],
primary_costs = test_function_cal[[12]],
gamma_capital =  test_function_cal[[4]][,1],
gamma_labour = test_function_cal[[4]][,2])
test_pi
test_function_cal[[7]]
length(test_function_cal[[7]])
test_function_cal[[5]]
test_function_cal[[3]]
## 2.2 test_pi ----------------------
nrow(test_function_cal[[3]])
ncol(test_fucntion_cal[[3]])
ncol(test_function_cal[[3]])
## 2.2 test_pi ----------------------
nrow(test_function_cal[[12]])
## 2.2 test_pi ----------------------
nrow(test_function_cal[[4]][,1])
## 2.2 test_pi ----------------------
nrow(test_function_cal[[4]])
## 2.2 test_pi ----------------------
nrow(test_function_cal[[12]])
length(sectors)
function_delta_pi_j <- function(price, A_j, beta, gamma_capital, gamma_labour, primary_costs){
delta_pi <- rep(0, length(sectors))
## first part
delta_pi[j] <- price[j]
## second part
step_1_list <- list()
## third part
step_2_df <- data.frame("gamma_capital" = gamma_capital,
"gamma_labour" = gamma_labour) %>%
mutate(capial_price = primary_costs[,"capital_price"]) %>%
mutate(labour_price = primary_costs[,"labour_price"]) %>%
mutate(w_g_g1 = (capial_price/gamma_capital)^gamma_capital) %>%
mutate(w_g_g2 = (labour_price/gamma_labour)^gamma_labour) %>%
mutate(step_2_j = w_g_g1 * w_g_g2)
print(nrow(step_2_df))
step_1_df <- beta
step_1_vec <- rep(0,nrow(beta))
for(j in 1:ncol(step_1_df)){
for(i in 1:nrow(step_1_df)){
step_1_df[i,j] <- (price[i]/step_1_df[i,j])^step_1_df[i,j]
}
step_1_vec[j] <- prod(step_1_df[,j])
}
for(j in 1:nrow(beta)){
delta_pi[j] <- price[j] - (A_j[j]* step_1_vec[j] *step_2_df[j,"step_2_j"])
}
# for(j in 1:length(sectors)){
#
#   step_1_list[[j]] <- beta %>%
#     mutate(prices = price)
#
#   step_1_list[[j]] <- step_1_list[[j]][,c(j,ncol(step_1_list[[j]]))]
#
#   colnames(step_1_list[[j]])[1] <- "beta_j"
#
#
#
#   step_1_list[[j]] <- step_1_list[[j]] %>%
#     ##p_b_b = price/ beta raised to beta
#     mutate(p_b_b = (price/beta_j)^beta_j)
#
#  delta_pi[j] <- delta_pi[j] - A_j[j]*prod(step_1_list[[j]][,"p_b_b"])*step_2_df[j,"step_2_j"]
#
# }
#return(step_2_df)
return(delta_pi)
}
test_pi <- function_delta_pi_j(price = test_function_cal[[7]],
A_j = test_function_cal[[5]],
beta = test_function_cal[[3]],
primary_costs = test_function_cal[[12]],
gamma_capital =  test_function_cal[[4]][,1],
gamma_labour = test_function_cal[[4]][,2])
length(test_function_cal[[7]])
function_delta_pi_j <- function(price, A_j, beta, gamma_capital, gamma_labour, primary_costs){
delta_pi <- rep(0, length(sectors))
## first part
delta_pi[j] <- price[j]
## second part
step_1_list <- list()
## third part
step_2_df <- data.frame("gamma_capital" = gamma_capital,
"gamma_labour" = gamma_labour) %>%
mutate(capial_price = primary_costs[,"capital_price"]) %>%
mutate(labour_price = primary_costs[,"labour_price"]) %>%
mutate(w_g_g1 = (capial_price/gamma_capital)^gamma_capital) %>%
mutate(w_g_g2 = (labour_price/gamma_labour)^gamma_labour) %>%
mutate(step_2_j = w_g_g1 * w_g_g2)
step_1_df <- beta
step_1_vec <- rep(0,nrow(beta))
print(nrow(step_1_df))
for(j in 1:ncol(step_1_df)){
for(i in 1:nrow(step_1_df)){
step_1_df[i,j] <- (price[i]/step_1_df[i,j])^step_1_df[i,j]
}
step_1_vec[j] <- prod(step_1_df[,j])
}
for(j in 1:nrow(beta)){
delta_pi[j] <- price[j] - (A_j[j]* step_1_vec[j] *step_2_df[j,"step_2_j"])
}
# for(j in 1:length(sectors)){
#
#   step_1_list[[j]] <- beta %>%
#     mutate(prices = price)
#
#   step_1_list[[j]] <- step_1_list[[j]][,c(j,ncol(step_1_list[[j]]))]
#
#   colnames(step_1_list[[j]])[1] <- "beta_j"
#
#
#
#   step_1_list[[j]] <- step_1_list[[j]] %>%
#     ##p_b_b = price/ beta raised to beta
#     mutate(p_b_b = (price/beta_j)^beta_j)
#
#  delta_pi[j] <- delta_pi[j] - A_j[j]*prod(step_1_list[[j]][,"p_b_b"])*step_2_df[j,"step_2_j"]
#
# }
#return(step_2_df)
return(delta_pi)
}
test_pi <- function_delta_pi_j(price = test_function_cal[[7]],
A_j = test_function_cal[[5]],
beta = test_function_cal[[3]],
primary_costs = test_function_cal[[12]],
gamma_capital =  test_function_cal[[4]][,1],
gamma_labour = test_function_cal[[4]][,2])
test_delta_function <- function_test_delta(test_function_cal = test_function_cal_first)
test_delta_function
length(test_delta_function[[3]])
test_pi
ncol(step_1_df)
