cal_52_all_list[[k+1]] <- cal_52_all_list[[k]]
## update prices
cal_52_all_list[[k+1]][[1]] <- cal_52_all_list[[k]][[1]] *scalar_df[k+2,c(11:15)]
## update consumption
cal_52_all_list[[k+1]][[4]] <- cal_52_all_list[[k]][[4]] *scalar_df[k+2,c(1:5)]
## 6.4.1 Update Ouptut ---------
## calculate new total ouptut
x_ij_temp <- ig_coef_df %>%
select(-Sectors) %>%
mutate(g_id = cal_52_all_list[[k+1]][[4]])%>%
mutate(A_tot = 0) %>%
mutate(B_tot = 0) %>%
mutate(C_tot = 0) %>%
mutate(D_tot = 0) %>%
mutate(E_tot = 0) %>%
mutate(emp_tot = as.numeric(hh_coef_df[,"Coef"]*labour_tot)) %>%
mutate(y_i = 0)
for (i in 1:length(Sectors_52)) {
x_ij_temp[i,"A_tot"] <-x_ij_temp[i,"sec_A"]*x_ij_temp[i,"g_id"]
x_ij_temp[i,"B_tot"] <-x_ij_temp[i,"sec_B"]*x_ij_temp[i,"g_id"]
x_ij_temp[i,"C_tot"] <-x_ij_temp[i,"sec_C"]*x_ij_temp[i,"g_id"]
x_ij_temp[i,"D_tot"] <-x_ij_temp[i,"sec_D"]*x_ij_temp[i,"g_id"]
x_ij_temp[i,"E_tot"] <-x_ij_temp[i,"sec_E"]*x_ij_temp[i,"g_id"]
}
x_ij_temp[1,"y_i"] <- sum(x_ij_temp[,"A_tot"])+x_ij_temp[1,"g_id"]
x_ij_temp[2,"y_i"] <- sum(x_ij_temp[,"B_tot"])+x_ij_temp[2,"g_id"]
x_ij_temp[3,"y_i"] <- sum(x_ij_temp[,"C_tot"])+x_ij_temp[3,"g_id"]
x_ij_temp[4,"y_i"] <- sum(x_ij_temp[,"D_tot"])+x_ij_temp[4,"g_id"]
x_ij_temp[5,"y_i"] <- sum(x_ij_temp[,"E_tot"])+x_ij_temp[5,"g_id"]
cal_52_all_list[[k+1]][[3]] <- x_ij_temp[,"y_i"]
## 6.5 new deltas ----------
delta_list_all[[k]] <- delta_52_all_fun(cal_52_list = cal_52_all_list[[k+1]])
## 6.51 Input deltas to delta data frame
delta_df[k+2,] <- c(delta_list_all[[k]][[1]],delta_list_all[[k]][[2]][1],delta_list_all[[k]][[3]])
}
return()
}
test_up <- update_inputs_fun(delta_start = test_all,cal_52_list=cal_52_list)
test_up <- update_inputs_fun(delta_start = test_all,cal_52_list=cal_52_list,runs = 5)
test_up <- update_inputs_fun(delta_start = test_all,cal_52_list=cal_52_list,runs = 5)
update_inputs_fun <- function(delta_start, cal_52_list,runs){
search_factor <- 2
steps <- length(Sectors_52)
## storage lists
cal_52_all_list <- list()
delta_list_all <- list()
cal_52_all_list[[1]] <- cal_52_list
## storage Data Frames
## Scalars
scalar_df <- data.frame("consu_1" = rep(1,2+runs),
"consu_2" = rep(1),
"consu_3" = rep(1),
"consu_4" = rep(1),
"consu_5" = rep(1),
"wages_1" = rep(1),
"wages_2" = rep(1),
"wages_3" = rep(1),
"wages_4" = rep(1),
"wages_5" = rep(1),
"prices_1" = rep(1),
"prices_3" = rep(1),
"prices_3" = rep(1),
"prices_4" = rep(1),
"prices_5" = rep(1))
delta_df <- data.frame("consu_1" = rep(1,2+runs),
"consu_2" = rep(1),
"consu_3" = rep(1),
"consu_4" = rep(1),
"consu_5" = rep(1),
"wages" = rep(1),
"prices_1" = rep(1),
"prices_3" = rep(1),
"prices_3" = rep(1),
"prices_4" = rep(1),
"prices_5" = rep(1))
delta_df[1,] <- c(delta_start[[1]],delta_start[[2]][1],delta_start[[3]])
delta_df[2,] <- c(delta_start[[1]],delta_start[[2]][1],delta_start[[3]])
k=1
i=1
for(k in 1:runs){
## calculate scalars
## 6.1 Consumption ------------------
for(i in 1:steps){
## if the delta is zero keep the same
if(delta_df[1+k,i]==0){
scalar_df[k+2,i] <- scalar_df[k+1,i]
## the delta do not have the same sign
} else if(sign(delta_df[1+k,i]) != sign(delta_df[k,i]) ){
scalar_df[k+2,i] <- scalar_df[k,i] + ((scalar_df[k+1,i]-scalar_df[k,i])/2)
} else if(sign(delta_df[k,i]) > 0 ){
scalar_df[k+2,i] <- scalar_df[k+1,i] *search_factor
} else {
scalar_df[k+2,i] <- scalar_df[k+1,i] /search_factor
}
}
## calculate scalars
## 6.2 price -------------------------------
for(i in 1:steps){
## if the delta is zero keep the same
if(delta_df[1+k,i+6]==0){
scalar_df[k+2,i+10] <- scalar_df[k+1,i+10]
## the delta do not have the same sign
} else if(sign(delta_df[1+k,i+6]) != sign(delta_df[k,i+6]) ){
scalar_df[k+2,i+10] <- scalar_df[k,i+10] + ((scalar_df[k+1,i+10]-scalar_df[k,i+10])/2)
} else if(sign(delta_df[k,i+6]) > 0 ){
scalar_df[k+2,i+10] <- scalar_df[k+1,i+10] *search_factor
} else {
scalar_df[k+2,i+10] <- scalar_df[k+1,i+10] /search_factor
}
}
## 6.3 Wages ----------
## 6.4 Update Cal_List -------------
cal_52_all_list[[k+1]] <- cal_52_all_list[[k]]
## update prices
cal_52_all_list[[k+1]][[1]] <- cal_52_all_list[[k]][[1]] *scalar_df[k+2,c(11:15)]
## update consumption
cal_52_all_list[[k+1]][[4]] <- cal_52_all_list[[k]][[4]] *scalar_df[k+2,c(1:5)]
## 6.4.1 Update Ouptut ---------
## calculate new total ouptut
x_ij_temp <- ig_coef_df %>%
select(-Sectors) %>%
mutate(g_id = cal_52_all_list[[k+1]][[4]])%>%
mutate(A_tot = 0) %>%
mutate(B_tot = 0) %>%
mutate(C_tot = 0) %>%
mutate(D_tot = 0) %>%
mutate(E_tot = 0) %>%
mutate(emp_tot = as.numeric(hh_coef_df[,"Coef"]*labour_tot)) %>%
mutate(y_i = 0)
for (i in 1:length(Sectors_52)) {
x_ij_temp[i,"A_tot"] <-x_ij_temp[i,"sec_A"]*x_ij_temp[i,"g_id"]
x_ij_temp[i,"B_tot"] <-x_ij_temp[i,"sec_B"]*x_ij_temp[i,"g_id"]
x_ij_temp[i,"C_tot"] <-x_ij_temp[i,"sec_C"]*x_ij_temp[i,"g_id"]
x_ij_temp[i,"D_tot"] <-x_ij_temp[i,"sec_D"]*x_ij_temp[i,"g_id"]
x_ij_temp[i,"E_tot"] <-x_ij_temp[i,"sec_E"]*x_ij_temp[i,"g_id"]
}
x_ij_temp[1,"y_i"] <- sum(x_ij_temp[,"A_tot"])+x_ij_temp[1,"g_id"]
x_ij_temp[2,"y_i"] <- sum(x_ij_temp[,"B_tot"])+x_ij_temp[2,"g_id"]
x_ij_temp[3,"y_i"] <- sum(x_ij_temp[,"C_tot"])+x_ij_temp[3,"g_id"]
x_ij_temp[4,"y_i"] <- sum(x_ij_temp[,"D_tot"])+x_ij_temp[4,"g_id"]
x_ij_temp[5,"y_i"] <- sum(x_ij_temp[,"E_tot"])+x_ij_temp[5,"g_id"]
cal_52_all_list[[k+1]][[3]] <- x_ij_temp[,"y_i"]
## 6.5 new deltas ----------
delta_list_all[[k]] <- delta_52_all_fun(cal_52_list = cal_52_all_list[[k+1]])
## 6.51 Input deltas to delta data frame
delta_df[k+2,] <- c(delta_list_all[[k]][[1]],delta_list_all[[k]][[2]][1],delta_list_all[[k]][[3]])
}
return()
}
test_up <- update_inputs_fun(delta_start = test_all,cal_52_list=cal_52_list,runs = 5)
## 5.4 run tests --------
delta_52_all_fun <- function(cal_52_list){
delta_all_list <- list()
test_c <- delta_52_c(cal_52_list = cal_52_list)
test_f <- delta_52_f(cal_52_list = cal_52_list)
test_pi <- delta_52_pi(cal_52_list = cal_52_list)
test_m <- delta_52_m(cal_52_list = cal_52_list )
delta_all_list[[1]] <- test_c
delta_all_list[[2]] <- test_f
delta_all_list[[3]] <- test_pi
delta_all_list[[4]] <- test_m
return(delta_all_list)
}
test_all <- delta_52_all_fun(cal_52_list = cal_52_list)
test_all
print(cal_52_all_list[[k+1]][[4]])
update_inputs_fun <- function(delta_start, cal_52_list,runs){
search_factor <- 2
steps <- length(Sectors_52)
## storage lists
cal_52_all_list <- list()
delta_list_all <- list()
cal_52_all_list[[1]] <- cal_52_list
## storage Data Frames
## Scalars
scalar_df <- data.frame("consu_1" = rep(1,2+runs),
"consu_2" = rep(1),
"consu_3" = rep(1),
"consu_4" = rep(1),
"consu_5" = rep(1),
"wages_1" = rep(1),
"wages_2" = rep(1),
"wages_3" = rep(1),
"wages_4" = rep(1),
"wages_5" = rep(1),
"prices_1" = rep(1),
"prices_3" = rep(1),
"prices_3" = rep(1),
"prices_4" = rep(1),
"prices_5" = rep(1))
delta_df <- data.frame("consu_1" = rep(1,2+runs),
"consu_2" = rep(1),
"consu_3" = rep(1),
"consu_4" = rep(1),
"consu_5" = rep(1),
"wages" = rep(1),
"prices_1" = rep(1),
"prices_3" = rep(1),
"prices_3" = rep(1),
"prices_4" = rep(1),
"prices_5" = rep(1))
delta_df[1,] <- c(delta_start[[1]],delta_start[[2]][1],delta_start[[3]])
delta_df[2,] <- c(delta_start[[1]],delta_start[[2]][1],delta_start[[3]])
k=1
i=1
for(k in 1:runs){
## calculate scalars
## 6.1 Consumption ------------------
for(i in 1:steps){
## if the delta is zero keep the same
if(delta_df[1+k,i]==0){
scalar_df[k+2,i] <- scalar_df[k+1,i]
## the delta do not have the same sign
} else if(sign(delta_df[1+k,i]) != sign(delta_df[k,i]) ){
scalar_df[k+2,i] <- scalar_df[k,i] + ((scalar_df[k+1,i]-scalar_df[k,i])/2)
} else if(sign(delta_df[k,i]) > 0 ){
scalar_df[k+2,i] <- scalar_df[k+1,i] *search_factor
} else {
scalar_df[k+2,i] <- scalar_df[k+1,i] /search_factor
}
}
## calculate scalars
## 6.2 price -------------------------------
for(i in 1:steps){
## if the delta is zero keep the same
if(delta_df[1+k,i+6]==0){
scalar_df[k+2,i+10] <- scalar_df[k+1,i+10]
## the delta do not have the same sign
} else if(sign(delta_df[1+k,i+6]) != sign(delta_df[k,i+6]) ){
scalar_df[k+2,i+10] <- scalar_df[k,i+10] + ((scalar_df[k+1,i+10]-scalar_df[k,i+10])/2)
} else if(sign(delta_df[k,i+6]) > 0 ){
scalar_df[k+2,i+10] <- scalar_df[k+1,i+10] *search_factor
} else {
scalar_df[k+2,i+10] <- scalar_df[k+1,i+10] /search_factor
}
}
## 6.3 Wages ----------
## 6.4 Update Cal_List -------------
cal_52_all_list[[k+1]] <- cal_52_all_list[[k]]
## update prices
cal_52_all_list[[k+1]][[1]] <- cal_52_all_list[[k]][[1]] *scalar_df[k+2,c(11:15)]
## update consumption
cal_52_all_list[[k+1]][[4]] <- cal_52_all_list[[k]][[4]] *scalar_df[k+2,c(1:5)]
## 6.4.1 Update Ouptut ---------
## calculate new total ouptut
x_ij_temp <- ig_coef_df %>%
select(-Sectors) %>%
mutate(g_id = cal_52_all_list[[k+1]][[4]])%>%
mutate(A_tot = 0) %>%
mutate(B_tot = 0) %>%
mutate(C_tot = 0) %>%
mutate(D_tot = 0) %>%
mutate(E_tot = 0) %>%
mutate(emp_tot = as.numeric(hh_coef_df[,"Coef"]*labour_tot)) %>%
mutate(y_i = 0)
for (i in 1:length(Sectors_52)) {
x_ij_temp[i,"A_tot"] <-x_ij_temp[i,"sec_A"]*x_ij_temp[i,"g_id"]
x_ij_temp[i,"B_tot"] <-x_ij_temp[i,"sec_B"]*x_ij_temp[i,"g_id"]
x_ij_temp[i,"C_tot"] <-x_ij_temp[i,"sec_C"]*x_ij_temp[i,"g_id"]
x_ij_temp[i,"D_tot"] <-x_ij_temp[i,"sec_D"]*x_ij_temp[i,"g_id"]
x_ij_temp[i,"E_tot"] <-x_ij_temp[i,"sec_E"]*x_ij_temp[i,"g_id"]
}
x_ij_temp[1,"y_i"] <- sum(x_ij_temp[,"A_tot"])+x_ij_temp[1,"g_id"]
x_ij_temp[2,"y_i"] <- sum(x_ij_temp[,"B_tot"])+x_ij_temp[2,"g_id"]
x_ij_temp[3,"y_i"] <- sum(x_ij_temp[,"C_tot"])+x_ij_temp[3,"g_id"]
x_ij_temp[4,"y_i"] <- sum(x_ij_temp[,"D_tot"])+x_ij_temp[4,"g_id"]
x_ij_temp[5,"y_i"] <- sum(x_ij_temp[,"E_tot"])+x_ij_temp[5,"g_id"]
cal_52_all_list[[k+1]][[3]] <- x_ij_temp[,"y_i"]
## 6.5 new deltas ----------
print(cal_52_all_list[[k+1]][[1]])
print(cal_52_all_list[[k+1]][[3]])
print(cal_52_all_list[[k+1]][[4]])
delta_list_all[[k]] <- delta_52_all_fun(cal_52_list = cal_52_all_list[[k+1]])
## 6.51 Input deltas to delta data frame
delta_df[k+2,] <- c(delta_list_all[[k]][[1]],delta_list_all[[k]][[2]][1],delta_list_all[[k]][[3]])
}
return()
}
test_up <- update_inputs_fun(delta_start = test_all,cal_52_list=cal_52_list,runs = 5)
scalar_df[k+2,c(11:15)]
c(scalar_df[k+2,c(11:15)])
as.vector(scalar_df[k+2,c(11:15)])
scalar_df[k+2,c(11:15)]
cal_52_all_list[[k]][[1]] *as.vector(scalar_df[k+2,c(11:15)])
cal_52_all_list[[k]][[1]]
cal_52_all_list[[k]][[1]] * (scalar_df[k+2,c(11:15)])
scalar_df[k+2,c(11:15)]
as.numeric(scalar_df[k+2,c(11:15)])
update_inputs_fun <- function(delta_start, cal_52_list,runs){
search_factor <- 2
steps <- length(Sectors_52)
## storage lists
cal_52_all_list <- list()
delta_list_all <- list()
cal_52_all_list[[1]] <- cal_52_list
## storage Data Frames
## Scalars
scalar_df <- data.frame("consu_1" = rep(1,2+runs),
"consu_2" = rep(1),
"consu_3" = rep(1),
"consu_4" = rep(1),
"consu_5" = rep(1),
"wages_1" = rep(1),
"wages_2" = rep(1),
"wages_3" = rep(1),
"wages_4" = rep(1),
"wages_5" = rep(1),
"prices_1" = rep(1),
"prices_3" = rep(1),
"prices_3" = rep(1),
"prices_4" = rep(1),
"prices_5" = rep(1))
delta_df <- data.frame("consu_1" = rep(1,2+runs),
"consu_2" = rep(1),
"consu_3" = rep(1),
"consu_4" = rep(1),
"consu_5" = rep(1),
"wages" = rep(1),
"prices_1" = rep(1),
"prices_3" = rep(1),
"prices_3" = rep(1),
"prices_4" = rep(1),
"prices_5" = rep(1))
delta_df[1,] <- c(delta_start[[1]],delta_start[[2]][1],delta_start[[3]])
delta_df[2,] <- c(delta_start[[1]],delta_start[[2]][1],delta_start[[3]])
k=1
i=1
for(k in 1:runs){
## calculate scalars
## 6.1 Consumption ------------------
for(i in 1:steps){
## if the delta is zero keep the same
if(delta_df[1+k,i]==0){
scalar_df[k+2,i] <- scalar_df[k+1,i]
## the delta do not have the same sign
} else if(sign(delta_df[1+k,i]) != sign(delta_df[k,i]) ){
scalar_df[k+2,i] <- scalar_df[k,i] + ((scalar_df[k+1,i]-scalar_df[k,i])/2)
} else if(sign(delta_df[k,i]) > 0 ){
scalar_df[k+2,i] <- scalar_df[k+1,i] *search_factor
} else {
scalar_df[k+2,i] <- scalar_df[k+1,i] /search_factor
}
}
## calculate scalars
## 6.2 price -------------------------------
for(i in 1:steps){
## if the delta is zero keep the same
if(delta_df[1+k,i+6]==0){
scalar_df[k+2,i+10] <- scalar_df[k+1,i+10]
## the delta do not have the same sign
} else if(sign(delta_df[1+k,i+6]) != sign(delta_df[k,i+6]) ){
scalar_df[k+2,i+10] <- scalar_df[k,i+10] + ((scalar_df[k+1,i+10]-scalar_df[k,i+10])/2)
} else if(sign(delta_df[k,i+6]) > 0 ){
scalar_df[k+2,i+10] <- scalar_df[k+1,i+10] *search_factor
} else {
scalar_df[k+2,i+10] <- scalar_df[k+1,i+10] /search_factor
}
}
## 6.3 Wages ----------
## 6.4 Update Cal_List -------------
cal_52_all_list[[k+1]] <- cal_52_all_list[[k]]
## update prices
cal_52_all_list[[k+1]][[1]] <- cal_52_all_list[[k]][[1]] * as.numeric(scalar_df[k+2,c(11:15)])
## update consumption
cal_52_all_list[[k+1]][[4]] <- cal_52_all_list[[k]][[4]] *as.numeric(scalar_df[k+2,c(1:5)])
## 6.4.1 Update Ouptut ---------
## calculate new total ouptut
x_ij_temp <- ig_coef_df %>%
select(-Sectors) %>%
mutate(g_id = cal_52_all_list[[k+1]][[4]])%>%
mutate(A_tot = 0) %>%
mutate(B_tot = 0) %>%
mutate(C_tot = 0) %>%
mutate(D_tot = 0) %>%
mutate(E_tot = 0) %>%
mutate(emp_tot = as.numeric(hh_coef_df[,"Coef"]*labour_tot)) %>%
mutate(y_i = 0)
for (i in 1:length(Sectors_52)) {
x_ij_temp[i,"A_tot"] <-x_ij_temp[i,"sec_A"]*x_ij_temp[i,"g_id"]
x_ij_temp[i,"B_tot"] <-x_ij_temp[i,"sec_B"]*x_ij_temp[i,"g_id"]
x_ij_temp[i,"C_tot"] <-x_ij_temp[i,"sec_C"]*x_ij_temp[i,"g_id"]
x_ij_temp[i,"D_tot"] <-x_ij_temp[i,"sec_D"]*x_ij_temp[i,"g_id"]
x_ij_temp[i,"E_tot"] <-x_ij_temp[i,"sec_E"]*x_ij_temp[i,"g_id"]
}
x_ij_temp[1,"y_i"] <- sum(x_ij_temp[,"A_tot"])+x_ij_temp[1,"g_id"]
x_ij_temp[2,"y_i"] <- sum(x_ij_temp[,"B_tot"])+x_ij_temp[2,"g_id"]
x_ij_temp[3,"y_i"] <- sum(x_ij_temp[,"C_tot"])+x_ij_temp[3,"g_id"]
x_ij_temp[4,"y_i"] <- sum(x_ij_temp[,"D_tot"])+x_ij_temp[4,"g_id"]
x_ij_temp[5,"y_i"] <- sum(x_ij_temp[,"E_tot"])+x_ij_temp[5,"g_id"]
cal_52_all_list[[k+1]][[3]] <- x_ij_temp[,"y_i"]
## 6.5 new deltas ----------
print(cal_52_all_list[[k+1]][[1]])
print(cal_52_all_list[[k+1]][[3]])
print(cal_52_all_list[[k+1]][[4]])
delta_list_all[[k]] <- delta_52_all_fun(cal_52_list = cal_52_all_list[[k+1]])
## 6.51 Input deltas to delta data frame
delta_df[k+2,] <- c(delta_list_all[[k]][[1]],delta_list_all[[k]][[2]][1],delta_list_all[[k]][[3]])
}
return()
}
test_up <- update_inputs_fun(delta_start = test_all,cal_52_list=cal_52_list,runs = 5)
update_inputs_fun <- function(delta_start, cal_52_list,runs){
search_factor <- 2
steps <- length(Sectors_52)
## storage lists
cal_52_all_list <- list()
delta_list_all <- list()
cal_52_all_list[[1]] <- cal_52_list
## storage Data Frames
## Scalars
scalar_df <- data.frame("consu_1" = rep(1,2+runs),
"consu_2" = rep(1),
"consu_3" = rep(1),
"consu_4" = rep(1),
"consu_5" = rep(1),
"wages_1" = rep(1),
"wages_2" = rep(1),
"wages_3" = rep(1),
"wages_4" = rep(1),
"wages_5" = rep(1),
"prices_1" = rep(1),
"prices_3" = rep(1),
"prices_3" = rep(1),
"prices_4" = rep(1),
"prices_5" = rep(1))
delta_df <- data.frame("consu_1" = rep(1,2+runs),
"consu_2" = rep(1),
"consu_3" = rep(1),
"consu_4" = rep(1),
"consu_5" = rep(1),
"wages" = rep(1),
"prices_1" = rep(1),
"prices_3" = rep(1),
"prices_3" = rep(1),
"prices_4" = rep(1),
"prices_5" = rep(1))
delta_df[1,] <- c(delta_start[[1]],delta_start[[2]][1],delta_start[[3]])
delta_df[2,] <- c(delta_start[[1]],delta_start[[2]][1],delta_start[[3]])
k=1
i=1
for(k in 1:runs){
## calculate scalars
## 6.1 Consumption ------------------
for(i in 1:steps){
## if the delta is zero keep the same
if(delta_df[1+k,i]==0){
scalar_df[k+2,i] <- scalar_df[k+1,i]
## the delta do not have the same sign
} else if(sign(delta_df[1+k,i]) != sign(delta_df[k,i]) ){
scalar_df[k+2,i] <- scalar_df[k,i] + ((scalar_df[k+1,i]-scalar_df[k,i])/2)
} else if(sign(delta_df[k,i]) > 0 ){
scalar_df[k+2,i] <- scalar_df[k+1,i] *search_factor
} else {
scalar_df[k+2,i] <- scalar_df[k+1,i] /search_factor
}
}
## calculate scalars
## 6.2 price -------------------------------
for(i in 1:steps){
## if the delta is zero keep the same
if(delta_df[1+k,i+6]==0){
scalar_df[k+2,i+10] <- scalar_df[k+1,i+10]
## the delta do not have the same sign
} else if(sign(delta_df[1+k,i+6]) != sign(delta_df[k,i+6]) ){
scalar_df[k+2,i+10] <- scalar_df[k,i+10] + ((scalar_df[k+1,i+10]-scalar_df[k,i+10])/2)
} else if(sign(delta_df[k,i+6]) > 0 ){
scalar_df[k+2,i+10] <- scalar_df[k+1,i+10] *search_factor
} else {
scalar_df[k+2,i+10] <- scalar_df[k+1,i+10] /search_factor
}
}
## 6.3 Wages ----------
## 6.4 Update Cal_List -------------
cal_52_all_list[[k+1]] <- cal_52_all_list[[k]]
## update prices
cal_52_all_list[[k+1]][[1]] <- cal_52_all_list[[k]][[1]] * as.numeric(scalar_df[k+2,c(11:15)])
## update consumption
cal_52_all_list[[k+1]][[4]] <- cal_52_all_list[[k]][[4]] *as.numeric(scalar_df[k+2,c(1:5)])
## 6.4.1 Update Ouptut ---------
## calculate new total ouptut
x_ij_temp <- ig_coef_df %>%
select(-Sectors) %>%
mutate(g_id = cal_52_all_list[[k+1]][[4]])%>%
mutate(A_tot = 0) %>%
mutate(B_tot = 0) %>%
mutate(C_tot = 0) %>%
mutate(D_tot = 0) %>%
mutate(E_tot = 0) %>%
mutate(emp_tot = as.numeric(hh_coef_df[,"Coef"]*labour_tot)) %>%
mutate(y_i = 0)
for (i in 1:length(Sectors_52)) {
x_ij_temp[i,"A_tot"] <-x_ij_temp[i,"sec_A"]*x_ij_temp[i,"g_id"]
x_ij_temp[i,"B_tot"] <-x_ij_temp[i,"sec_B"]*x_ij_temp[i,"g_id"]
x_ij_temp[i,"C_tot"] <-x_ij_temp[i,"sec_C"]*x_ij_temp[i,"g_id"]
x_ij_temp[i,"D_tot"] <-x_ij_temp[i,"sec_D"]*x_ij_temp[i,"g_id"]
x_ij_temp[i,"E_tot"] <-x_ij_temp[i,"sec_E"]*x_ij_temp[i,"g_id"]
}
x_ij_temp[1,"y_i"] <- sum(x_ij_temp[,"A_tot"])+x_ij_temp[1,"g_id"]
x_ij_temp[2,"y_i"] <- sum(x_ij_temp[,"B_tot"])+x_ij_temp[2,"g_id"]
x_ij_temp[3,"y_i"] <- sum(x_ij_temp[,"C_tot"])+x_ij_temp[3,"g_id"]
x_ij_temp[4,"y_i"] <- sum(x_ij_temp[,"D_tot"])+x_ij_temp[4,"g_id"]
x_ij_temp[5,"y_i"] <- sum(x_ij_temp[,"E_tot"])+x_ij_temp[5,"g_id"]
cal_52_all_list[[k+1]][[3]] <- x_ij_temp[,"y_i"]
## 6.5 new deltas ----------
delta_list_all[[k]] <- delta_52_all_fun(cal_52_list = cal_52_all_list[[k+1]])
## 6.51 Input deltas to delta data frame
delta_df[k+2,] <- c(delta_list_all[[k]][[1]],delta_list_all[[k]][[2]][1],delta_list_all[[k]][[3]])
}
return(delta_df)
}
test_up <- update_inputs_fun(delta_start = test_all,cal_52_list=cal_52_list,runs = 5)
test_up
